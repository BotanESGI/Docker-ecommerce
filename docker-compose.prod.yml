version: "3.8"

services:
  auth-service:
    image: auth-service:latest
    restart: always
    networks:
      - app-network
    depends_on:
      - mongodb
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    image: order-service:latest
    restart: always
    networks:
      - app-network
    depends_on:
      - mongodb
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    image: product-service:latest
    restart: always
    networks:
      - app-network
    depends_on:
      - mongodb
    env_file:
      - .env.production
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    restart: always
    networks:
      - app-network
    volumes:
      - mongo-data:/data/db
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    image: frontend:latest
    restart: always
    networks:
      - app-network
    depends_on:
      - auth-service
      - order-service
      - product-service
    ports:
      - "8080:80"

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge

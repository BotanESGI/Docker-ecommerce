# Mes variables
DOCKER_COMPOSE = docker-compose
DEV_FILE = docker-compose.yml
PROD_FILE = docker-compose.prod.yml

# Mes commandes
.PHONY: help up-dev up-prod down-dev down-prod logs-dev logs-prod rebuild-dev rebuild-prod restart-dev restart-prod status clean install-product run-tests build-prod

## Afficher les commandes disponibles
help:
	@echo ""
	@echo "üöÄ \033[1;32mCommandes Makefile disponibles\033[0m üöÄ"
	@echo "---------------------------------------------"
	@echo "\033[1;34mD√©marrage et Arr√™t :\033[0m"
	@echo "  make up-dev       ‚Üí Lancer le projet en mode d√©veloppement"
	@echo "  make up-prod      ‚Üí Lancer le projet en mode production"
	@echo "  make down-dev     ‚Üí Arr√™ter le projet en mode d√©veloppement"
	@echo "  make down-prod    ‚Üí Arr√™ter le projet en mode production"
	@echo ""
	@echo "\033[1;34mLogs et Statut :\033[0m"
	@echo "  make logs-dev     ‚Üí Afficher les logs du projet en mode d√©veloppement"
	@echo "  make logs-prod    ‚Üí Afficher les logs du projet en mode production"
	@echo "  make status       ‚Üí Voir les services Docker actifs"
	@echo ""
	@echo "\033[1;34mRebuild et Restart :\033[0m"
	@echo "  make rebuild-dev  ‚Üí Rebuild et red√©marrer en mode d√©veloppement"
	@echo "  make rebuild-prod ‚Üí Rebuild et red√©marrer en mode production"
	@echo "  make restart-dev  ‚Üí Red√©marrer les services en mode d√©veloppement"
	@echo "  make restart-prod ‚Üí Red√©marrer les services en mode production"
	@echo ""
	@echo "\033[1;34mMaintenance :\033[0m"
	@echo "  make clean        ‚Üí Supprimer les conteneurs, images et volumes inutilis√©s"
	@echo ""
	@echo "\033[1;34mScript :\033[0m"
	@echo "  make install-product ‚Üí Ex√©cuter le script d'initialisation des produits"
	@echo "  make run-tests       ‚Üí Ex√©cuter le script des tests du projet"
	@echo ""
	@echo "\033[1;34mGestion des images :\033[0m"
	@echo "  make build-prod   ‚Üí Construire les images Docker pour la production"
	@echo ""

## Lancer le projet en mode d√©veloppement
up-dev:
	$(DOCKER_COMPOSE) -f $(DEV_FILE) up --build -d

## Lancer le projet en mode production
up-prod:
	docker build -t auth-service:latest ./services/auth-service
	docker build -t order-service:latest ./services/order-service
	docker build -t product-service:latest ./services/product-service
	docker build -t frontend:latest ./frontend
	$(DOCKER_COMPOSE) -f $(PROD_FILE) up --build -d

## Arr√™ter le projet en mode d√©veloppement
down-dev:
	$(DOCKER_COMPOSE) -f $(DEV_FILE) down

## Arr√™ter le projet en mode production
down-prod:
	$(DOCKER_COMPOSE) -f $(PROD_FILE) down

## Afficher les logs du projet en mode d√©veloppement
logs-dev:
	$(DOCKER_COMPOSE) -f $(DEV_FILE) logs -f

## Afficher les logs du projet en mode production
logs-prod:
	$(DOCKER_COMPOSE) -f $(PROD_FILE) logs -f

## Rebuild les images et red√©marrer en mode d√©veloppement
rebuild-dev:
	$(DOCKER_COMPOSE) -f $(DEV_FILE) up --build -d --force-recreate

## Rebuild les images et red√©marrer en mode production
rebuild-prod:
	$(DOCKER_COMPOSE) -f $(PROD_FILE) up --build -d --force-recreate

## Red√©marrer les services en mode d√©veloppement
restart-dev:
	$(DOCKER_COMPOSE) -f $(DEV_FILE) restart

## Red√©marrer les services en mode production
restart-prod:
	$(DOCKER_COMPOSE) -f $(PROD_FILE) restart

## Afficher l'√©tat des conteneurs en cours d'ex√©cution
status:
	$(DOCKER_COMPOSE) ps

## Nettoyer les conteneurs, images et volumes inutilis√©s
clean:
	@echo "üßπ Suppression des conteneurs arr√™t√©s, images et volumes inutilis√©s..."
	docker system prune -f --volumes

## Construire les images Docker pour la production
build-prod:
	@echo "‚öôÔ∏è  Construction des images Docker pour la production..."
	docker build -t auth-service:latest ./services/auth-service
	docker build -t order-service:latest ./services/order-service
	docker build -t product-service:latest ./services/product-service
	docker build -t frontend:latest ./frontend
	@echo "‚úÖ Build termin√© !"

## Ex√©cuter le script d'initialisation des produits
install-product:
	@echo "üì¶ Initialisation des produits..."
	./scripts/init-products.sh

## Ex√©cuter les tests du projet
run-tests:
	@echo "üß™ Ex√©cution des tests..."
	./scripts/run-tests.sh

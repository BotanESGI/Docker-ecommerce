version: "3.8"

services:
  auth-service:
    build:
      context: ./services/auth-service
      target: development
    ports:
      - "3001:3001"
    env_file:
      - .env.development
      - ./services/auth-service/.env
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/auth
    depends_on:
      - mongodb
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  order-service:
    build:
      context: ./services/order-service
      target: development
    ports:
      - "3002:3002"
    env_file:
      - .env.development
    depends_on:
      - mongodb
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  product-service:
    build:
      context: ./services/product-service
      target: development
    ports:
      - "3000:3000"
    env_file:
      - .env.development
    depends_on:
      - mongodb
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  mongodb:
    image: mongo:latest
    volumes:
      - mongo-data:/data/db
    ports:
      - "27017:27017"
    restart: always
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
    ports:
      - "8080:80"
    env_file:
      - .env.development
    volumes:
      - ./frontend/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-service
      - order-service
      - product-service
      - mongodb
    restart: always
    networks:
      - app-network

volumes:
  mongo-data:

networks:
  app-network:
    driver: bridge
